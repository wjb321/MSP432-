<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\blinky.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\blinky.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Fri May 05 22:24:34 2023
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[1a]">ADC0SS0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">ADC0SS0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1a]">ADC0SS0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1b]">ADC0SS1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1c]">ADC0SS2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1d]">ADC0SS3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3a]">ADC1SS0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3b]">ADC1SS1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3c]">ADC1SS2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3d]">ADC1SS3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[66]">AES0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[32]">CAN0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[33]">CAN1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[25]">COMP0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[26]">COMP1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[27]">COMP2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[67]">DES0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[34]">EMAC0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3e]">EPI0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[29]">FLASH_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[c]">GPIOA_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[d]">GPIOB_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[e]">GPIOC_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[f]">GPIOD_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[10]">GPIOE_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2a]">GPIOF_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2b]">GPIOG_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2c]">GPIOH_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3f]">GPIOJ_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[40]">GPIOK_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[41]">GPIOL_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[52]">GPIOM_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[53]">GPION_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[55]">GPIOP0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[56]">GPIOP1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[57]">GPIOP2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[58]">GPIOP3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[59]">GPIOP4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5a]">GPIOP5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5b]">GPIOP6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5c]">GPIOP7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5d]">GPIOQ0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5e]">GPIOQ1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5f]">GPIOQ2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[60]">GPIOQ3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[61]">GPIOQ4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[62]">GPIOQ5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[63]">GPIOQ6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[64]">GPIOQ7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[35]">HIBERNATE_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[31]">I2C1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[49]">I2C2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4a]">I2C3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[50]">I2C4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[51]">I2C5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6c]">I2C6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6d]">I2C7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6e]">I2C8_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6f]">I2C9_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[72]">LED1Task</a> from blinky.o(i.LED1Task) referenced from blinky.o(i.main)
 <LI><a href="#[73]">LED2Task</a> from blinky.o(i.LED2Task) referenced from blinky.o(i.main)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[16]">PWM0_0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[17]">PWM0_1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[18]">PWM0_2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[37]">PWM0_3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[15]">PWM0_FAULT_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[19]">QEI0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[65]">SHA0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[13]">SSI0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2e]">SSI1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[42]">SSI2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[43]">SSI3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[28]">SYSCTL_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4f]">SYSEXC_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from port.o(i.SysTick_Handler) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[70]">SystemInit</a> from system_msp432e401y.o(i.SystemInit) referenced from startup_msp432e401y_uvision.o(.text)
 <LI><a href="#[54]">TAMPER0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1f]">TIMER0A_IRQHandler</a> from timers_config.o(i.TIMER0A_IRQHandler) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[20]">TIMER0B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[21]">TIMER1A_IRQHandler</a> from timers_config.o(i.TIMER1A_IRQHandler) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[22]">TIMER1B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[23]">TIMER2A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[24]">TIMER2B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2f]">TIMER3A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[30]">TIMER3B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4b]">TIMER4A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4c]">TIMER4B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4d]">TIMER5A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4e]">TIMER5B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[68]">TIMER6A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[69]">TIMER6B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6a]">TIMER7A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6b]">TIMER7B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[11]">UART0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[12]">UART1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2d]">UART2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[44]">UART3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[45]">UART4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[46]">UART5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[47]">UART6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[48]">UART7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[39]">UDMAERR_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[38]">UDMA_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[36]">USB0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1e]">WATCHDOG_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[77]">__main</a> from __main.o(!!!main) referenced from startup_msp432e401y_uvision.o(.text)
 <LI><a href="#[75]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[74]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[76]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[77]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[78]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7a]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[e2]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[e3]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[7b]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[e4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[81]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7c]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[e5]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[e6]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[e7]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[e8]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[e9]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[ea]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[eb]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ec]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ed]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[ee]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[ef]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[f0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[f1]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[f2]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[f3]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[f4]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[f5]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[f7]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[86]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[f9]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[fa]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[fb]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[fc]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[fd]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[fe]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[ff]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[100]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[79]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[101]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[7e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[80]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[102]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[82]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[103]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[92]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[85]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[104]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[87]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[db]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[da]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC0SS0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC0SS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC0SS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC0SS3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>ADC1SS0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>ADC1SS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>ADC1SS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>ADC1SS3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>AES0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>COMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>COMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DES0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EMAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>GPIOA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>GPIOB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GPIOC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPIOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIOE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPIOF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPIOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GPIOH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>GPIOJ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>GPIOK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>GPIOL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>GPIOM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>GPION_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>GPIOP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>GPIOP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>GPIOP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>GPIOP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>GPIOP4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>GPIOP5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>GPIOP6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>GPIOP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPIOQ0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>GPIOQ1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIOQ2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>GPIOQ3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GPIOQ4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>GPIOQ5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>GPIOQ6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>GPIOQ7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>HIBERNATE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2C9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PWM0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PWM0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PWM0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>PWM0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PWM0_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>QEI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SHA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SSI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SSI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SSI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SYSCTL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SYSEXC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TAMPER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER0B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER1B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER2A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER2B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIMER3A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIMER3B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIMER4A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIMER4B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIMER5A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIMER5B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIMER6A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIMER6B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>TIMER7A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIMER7B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UDMAERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>WATCHDOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[8a]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[106]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[107]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[8d]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[108]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[10a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[84]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[110]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[111]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[112]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>ConfigureUART</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, usart.o(i.ConfigureUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ConfigureUART &rArr; UARTStdioConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>GPIODirModeSet</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEthernetLED
</UL>

<P><STRONG><a name="[97]"></a>GPIOPadConfigSet</STRONG> (Thumb, 342 bytes, Stack size 20 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEthernetLED
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[95]"></a>GPIOPinTypeEthernetLED</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeEthernetLED))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeEthernetLED &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
</UL>

<P><STRONG><a name="[9a]"></a>PinoutSet</STRONG> (Thumb, 518 bytes, Stack size 16 bytes, pinout.o(i.PinoutSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PinoutSet &rArr; GPIOPinTypeEthernetLED &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeEthernetLED
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>SysCtlClockFreqSet</STRONG> (Thumb, 530 bytes, Stack size 40 bytes, sysctl.o(i.SysCtlClockFreqSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysCtlClockFreqSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SysCtlMemTimingGet
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>SysCtlPeripheralReady</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralReady))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1A_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0A_config
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SystemInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, system_msp432e401y.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER0A_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timers_config.o(i.TIMER0A_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER0A_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>TIMER0A_config</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, timers_config.o(i.TIMER0A_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER0A_config
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>TIMER1A_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timers_config.o(i.TIMER1A_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER1A_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>TIMER1A_config</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, timers_config.o(i.TIMER1A_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER1A_config
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>UARTStdioConfig</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureUART
</UL>

<P><STRONG><a name="[98]"></a>UARTprintf</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, uartstdio.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UARTprintf &rArr; UARTvprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED2Task
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1Task
</UL>

<P><STRONG><a name="[a1]"></a>UARTvprintf</STRONG> (Thumb, 574 bytes, Stack size 64 bytes, uartstdio.o(i.UARTvprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UARTvprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[a2]"></a>UARTwrite</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>

<P><STRONG><a name="[d1]"></a>eTaskConfirmSleepModeStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tasks.o(i.eTaskConfirmSleepModeStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[83]"></a>main</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, blinky.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = main &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1A_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0A_config
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockFreqSet
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinoutSet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigureUART
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[cd]"></a>pvPortMalloc</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[bd]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[a7]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[b4]"></a>vApplicationIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blinky.o(i.vApplicationIdleHook))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[d0]"></a>vApplicationMallocFailedHook</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, blinky.o(i.vApplicationMallocFailedHook))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[d8]"></a>vApplicationStackOverflowHook</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, blinky.o(i.vApplicationStackOverflowHook))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[e1]"></a>vApplicationTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blinky.o(i.vApplicationTickHook))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[ae]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[bc]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[a8]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>

<P><STRONG><a name="[aa]"></a>vPortEnterCritical</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStepTick
</UL>

<P><STRONG><a name="[ac]"></a>vPortExitCritical</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStepTick
</UL>

<P><STRONG><a name="[b3]"></a>vPortFree</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[d9]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[b7]"></a>vPortSuppressTicksAndSleep</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, port.o(i.vPortSuppressTicksAndSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vPortSuppressTicksAndSleep &rArr; vTaskStepTick
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPreSleepProcessing
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStepTick
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskConfirmSleepModeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[d2]"></a>vPreSleepProcessing</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blinky.o(i.vPreSleepProcessing))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[c6]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[99]"></a>vTaskDelay</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED2Task
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1Task
</UL>

<P><STRONG><a name="[dd]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(i.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[cc]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[d5]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[d4]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[a5]"></a>vTaskStartScheduler</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>vTaskStepTick</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, tasks.o(i.vTaskStepTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vTaskStepTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[b6]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[89]"></a>vTaskSwitchContext</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[d7]"></a>xPortStartScheduler</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[a3]"></a>xQueueGenericCreate</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[ba]"></a>xQueueGenericReset</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[c4]"></a>xQueueReceive</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, queue.o(i.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[de]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[a4]"></a>xTaskCreate</STRONG> (Thumb, 104 bytes, Stack size 72 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[dc]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[c7]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[9d]"></a>xTaskIncrementTick</STRONG> (Thumb, 412 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationTickHook
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[cb]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[b8]"></a>xTaskResumeAll</STRONG> (Thumb, 338 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[d6]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[7d]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[115]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[116]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[72]"></a>LED1Task</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, blinky.o(i.LED1Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LED1Task &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blinky.o(i.main)
</UL>
<P><STRONG><a name="[73]"></a>LED2Task</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, blinky.o(i.LED2Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LED2Task &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blinky.o(i.main)
</UL>
<P><STRONG><a name="[b1]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[b9]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[bf]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[ca]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[a6]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[a9]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[af]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[b0]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[b5]"></a>prvGetExpectedIdleTime</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tasks.o(i.prvGetExpectedIdleTime))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[75]"></a>prvIdleTask</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetExpectedIdleTime
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[bb]"></a>prvInitialiseNewTask</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[ab]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[e0]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[ad]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[c9]"></a>prvGetNextExpireTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(i.prvGetNextExpireTime))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[be]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[c0]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, timers.o(i.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[c2]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = prvProcessReceivedCommands &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[c5]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[c1]"></a>prvReloadTimer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(i.prvReloadTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[c3]"></a>prvSampleTimeNow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[c8]"></a>prvSwitchTimerLists</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[76]"></a>prvTimerTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[ce]"></a>prvHeapInit</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[cf]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[74]"></a>prvTaskExitError</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[9c]"></a>_SysCtlMemTimingGet</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sysctl.o(i._SysCtlMemTimingGet))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockFreqSet
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
