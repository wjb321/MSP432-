#include <ti/devices/msp432e4/driverlib/driverlib.h>

/* Standard Includes */
#include <stdint.h>
#include <stdio.h>
#include <stdbool.h>
#include "pinout.h"
#include "msp432e401y.h"
#include <rthw.h>
#include <rtthread.h>
//#include <board.h>
#include "uartstdio.h"
//#include "driverlib.h"
static rt_mq_t test_mq = RT_NULL;
int main(void)
{
test_mq = rt_mq_create(¡°test_mq¡±,/* ?????? */
40, /* ??????? */
20, /* ????????? */
RT_IPC_FLAG_FIFO);/* ???? FIFO(0x00)*/

if (test_mq != RT_NULL)
  rt_kprintf(¡°????????? \n\n¡±);
/*****????****/
/*???? 1*/
led1_thread = /* ??????? */
  rt_thread_create( ¡°led1¡±, /* ???? */
                    led1_thread_entry, /* ?????? */
                    RT_NULL, /* ???? ???? */
                    512, /* ????? */
                    4, /* ?????? */
                    20); /* ????? */
/* ? ???? ???? */
if (led1_thread != RT_NULL)
  rt_thread_startup(led1_thread);
else
  return -1;
/*???? 2*/
led2_thread = /* ??????? */
  rt_thread_create( ¡°led2¡±, /* ???? */
                    led2_thread_entry, /* ?????? */
                    RT_NULL, /* ???? ???? */
                    512, /* ????? */
                    5, /* ?????? */
                    20); /* ????? */
/* ? ???? ???? */
if (led2_thread != RT_NULL)
  rt_thread_startup(led2_thread);
else
  return -1;
}
/*********?? 1**********/
static void led1_thread_entry(void* parameter)
{
  rt_err_t uwRet = RT_EOK;
  uint32_t msg1 = 0x1234;
  uint32_t msg2 = 0x5678;
  rt_uint8_t count;
  for(;;)
    {
      count++;
      if(count&1)
        {

          uwRet = rt_mq_send(test_mq,/* ?(???)??? ID(??) */
                             &msg1,/* ?(???)??? */
                             sizeof(msg1)); /* ????? */
          if (RT_EOK != uwRet)
            {
              rt_kprintf(¡°msg1 send fail,the error code: %lx\n¡±,uwRet);
            }
        }
      else
        {
          uwRet = rt_mq_send(test_mq,/* ?(???)??? ID(??) */
                             &msg2,/* ?(???)??? */
                             sizeof(msg2)); /* ????? */
          if (RT_EOK != uwRet)
            {
              rt_kprintf(¡°msg2 send fail,the error code: %lx\n¡±,uwRet);
            }
        }
      rt_thread_delay(1000);
    }
}
/*********?? 2**********/
static void led2_thread_entry(void* parameter)
{
  rt_err_t uwRet = RT_EOK;
  uint32_t r_queue;
  for(;;)
    {
      /* ????(??)? ?????§Ñ??? */
      uwRet = rt_mq_recv(test_mq, /* ??(??)??? ID(??) */
                         &r_queue, /* ??(??)??????? */
                         sizeof(r_queue), /* ??(??)?????? */
                         RT_WAITING_FOREVER); /* ????? §Ñ?? */
      if (RT_EOK == uwRet)
        {
          rt_kprintf(¡°the recv success? 0x%x\n¡±,r_queue);
        }
      else
        {
          rt_kprintf(¡°the recv fail,teh error code? 0x%lx\n¡±,uwRet);
        }
      rt_thread_delay(100);
    }
}